<Window x:Class="Final.Views.EventoView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
        Title="Cadastro de Evento" Height="350" Width="525">

    <Window.Resources>
        <controls:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <!--<conv:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>-->  
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Campos de entrada para as propriedades do Evento -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Content="Nome" Grid.Column="0" Grid.Row="0"/>
            <TextBox x:Name="NomeTextBox" Grid.Column="0" Grid.Row="1" Height="20" Background="Transparent" Text="{Binding Nome, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock IsHitTestVisible="False" Text="Nome" 
                       Foreground="Gray" 
                       Visibility="{Binding ElementName=NomeTextBox, Path=Text.Length, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="5,3,0,0"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Text" Value=""/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <Label Content="Data" Grid.Row="0" Grid.Column="1"/>
            <DatePicker x:Name="DataDatePicker" Grid.Row="1" Grid.Column="1" Margin="0,0,10,10" SelectedDate="{Binding Data, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Content="Descrição" Grid.Column="0" Grid.Row="0"/>
            <TextBox x:Name="DescricaoTextBox" Grid.Column="0" Grid.Row="1" Background="Transparent" Text="{Binding Descricao, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock IsHitTestVisible="False" Text="Descrição" 
                       Foreground="Gray" 
                       Visibility="{Binding ElementName=DescricaoTextBox, Path=Text.Length, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="5,3,0,0"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Text" Value=""/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Content="Local" Grid.Column="0" Grid.Row="0"/>
            <TextBox x:Name="LocalTextBox" Grid.Column="0" Grid.Row="1" Background="Transparent" Text="{Binding Local, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock IsHitTestVisible="False" Text="Local" 
                       Foreground="Gray" 
                       Visibility="{Binding ElementName=LocalTextBox, Path=Text.Length, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="5,3,0,0"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Text" Value=""/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <Label Content="Cidade" Grid.Column="1" Grid.Row="0"/>
            <TextBox x:Name="CidadeTextBox" Grid.Column="1" Grid.Row="1" Background="Transparent" Text="{Binding Cidade, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock IsHitTestVisible="False" Text="Cidade" 
                       Foreground="Gray" 
                       Visibility="{Binding ElementName=CidadeTextBox, Path=Text.Length, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="5,3,0,0"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Text" Value=""/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <Label Content="Estado" Grid.Column="2" Grid.Row="0"/>
            <TextBox x:Name="EstadoTextBox" Grid.Column="2" Grid.Row="1" Background="Transparent" Text="{Binding Estado, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock IsHitTestVisible="False" Text="Estado" 
                       Foreground="Gray" 
                       Visibility="{Binding ElementName=EstadoTextBox, Path=Text.Length, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="5,3,0,0"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Text" Value=""/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>

        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Content="Capacidade" Grid.Column="0" Grid.Row="0"/>
            <TextBox x:Name="CapacidadeTextBox" Grid.Column="0" Grid.Row="1" Background="Transparent" Text="{Binding Capacidade, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock IsHitTestVisible="False" Text="Capacidade" 
                       Foreground="Gray" 
                       Visibility="{Binding ElementName=CapacidadeTextBox, Path=Text.Length, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="5,3,0,0"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Text" Value=""/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <Label Content="Convidados" Grid.Column="1" Grid.Row="0"/>
            <TextBox x:Name="ConvidadosTextBox" Grid.Column="1" Grid.Row="1" Background="Transparent" Text="{Binding Convidados, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock IsHitTestVisible="False" Text="Convidados" 
                       Foreground="Gray" 
                       Visibility="{Binding ElementName=ConvidadosTextBox, Path=Text.Length, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="5,3,0,0"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Text" Value=""/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>

        <!-- Botões -->
        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="Confirmar" Command="{Binding ConfirmarCommand}" Margin="0,0,10,0"/>
            <!--<Button Content="Resetar" Command="{Binding ResetarCommand}" Margin="0,0,10,0" />--> 
            <Button Content="Resetar" Click="Resetar_Click" Margin="0,0,10,0"/>
            <Button Content="Voltar" Command="{Binding VoltarCommand}" />
        </StackPanel>
    </Grid>
</Window>